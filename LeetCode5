class Solution:
    def longestPalindrome(self, s: str) -> str:
        mybool = False
        longest = ""
        for i in range(len(s)):
            longest_sub = ""
            #odd length
            sub_string = self.helper(s, i, i)
            #even length
            sub_string2 = self.helper(s, i, i + 1)
            if len(sub_string) > len(sub_string2):
                longest_sub = sub_string
            else:
                longest_sub = sub_string2
            if len(longest_sub) > len(longest):
                longest = longest_sub
        return longest
        

    def helper(self, s, l, r):
        string = ""
        while l >= 0 and r < len(s) and s[l] == s[r]:
            sub_string = s[l : r + 1]
           # print(sub_string)
            if len(sub_string) > len(string):
                string = sub_string
            l -= 1
            r += 1
        return string
